"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sender = void 0;
const element_1 = require("./message/element");
class Sender {
    constructor(bot, url, target) {
        this.bot = bot;
        this.url = url;
        this.target = target;
        this.payload = {};
    }
    async sendElem(item, isLast) {
        const converter = (0, element_1.getConverter)(item);
        if (!converter)
            throw new Error(`un support elem:${item.type}`);
        const [msgKey, msgParam, brief] = await converter(item, this.bot);
        const { data } = await this.bot.request.post(this.url, {
            ...this.target,
            robotCode: this.bot.options.clientId,
            msgKey,
            msgParam: JSON.stringify(msgParam)
        }, {
            headers: {
                'x-acs-dingtalk-access-token': this.bot.sessionManager.access_token
            }
        });
        if (this.target.userIds) {
            this.bot.logger.info(`send: [Private(${this.target.userIds.join(',')})] ${brief}`);
        }
        else {
            this.bot.logger.info(`send: [Group(${this.target.openConversationId})] ${brief}`);
        }
        return data.processQueryKey;
    }
    async sendMsg(message) {
        const result = [];
        let i = 0;
        if (!Array.isArray(message))
            message = [message];
        for (let item of message) {
            i++;
            if (typeof item === 'string')
                item = { type: 'text', text: item };
            result.push(await this.sendElem(item, i === message.length));
        }
        return JSON.stringify(result);
    }
}
exports.Sender = Sender;
